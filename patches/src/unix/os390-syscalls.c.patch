diff --git a/src/unix/os390-syscalls.c b/src/unix/os390-syscalls.c
index 7f90c270..e4744b9c 100644
--- a/src/unix/os390-syscalls.c
+++ b/src/unix/os390-syscalls.c
@@ -149,8 +149,23 @@ static void init_message_queue(uv__os390_epoll* lst) {
 
   /* initialize message queue */
   lst->msg_queue = msgget(IPC_PRIVATE, 0600 | IPC_CREAT);
-  if (lst->msg_queue == -1)
+  if (lst->msg_queue == -1) {
+    int failingerrno = errno;
+    perror("msgget");
+    if (failingerrno == ENOSPC) {
+      IPCQPROC info;
+      if (!get_ipcs_overview(&info))
+        fprintf(stderr, "Current number of message queues: %d\n"
+                        "Maximum allowed message queues: %d\n"
+                        "Re-run with export __IPC_CLEANUP=1 or increase "
+                        "system IPCMSGNIDS maximum value\n",
+                        info.overview.ipcqomsgnids,
+                        info.overview.ipcqomsgprivate +
+                        info.overview.ipcqomsgkeyed);
+    }
     abort();
+  }
+
 
   /*
      On z/OS, the message queue will be affiliated with the process only
@@ -158,12 +173,17 @@ static void init_message_queue(uv__os390_epoll* lst) {
      can be queried for all message queues belonging to our process id.
   */
   msg.header = 1;
-  if (msgsnd(lst->msg_queue, &msg, sizeof(msg.body), 0) != 0)
+  if (msgsnd(lst->msg_queue, &msg, sizeof(msg.body), 0) != 0) {
+    perror("msgsnd");
     abort();
+  }
 
   /* Clean up the dummy message sent above */
-  if (msgrcv(lst->msg_queue, &msg, sizeof(msg.body), 0, 0) != sizeof(msg.body))
+  if (msgrcv(lst->msg_queue,
+             &msg, sizeof(msg.body), 0, 0) != sizeof(msg.body)) {
+    perror("msgrcv");
     abort();
+  }
 }
 
 
@@ -204,9 +224,6 @@ static void epoll_init(void) {
   uv__queue_init(&global_epoll_queue);
   if (uv_mutex_init(&global_epoll_lock))
     abort();
-
-  if (pthread_atfork(&before_fork, &after_fork, &child_fork))
-    abort();
 }
 
 
@@ -240,12 +257,21 @@ int epoll_ctl(uv__os390_epoll* lst,
   uv_mutex_lock(&global_epoll_lock);
 
   if (op == EPOLL_CTL_DEL) {
-    if (fd >= lst->size || lst->items[fd].fd == -1) {
-      uv_mutex_unlock(&global_epoll_lock);
-      errno = ENOENT;
-      return -1;
+    if (event->is_msg) {
+      /* The user has deleted the System V message queue. Highly likely
+       * that the process is being shut down. So stop listening to it.
+       */
+      msgctl(lst->msg_queue, IPC_RMID, NULL);
+      lst->msg_queue = -1;
+      lst->items[lst->size - 1].fd = -1;
+    } else {
+      if (fd >= lst->size || lst->items[fd].fd == -1) {
+        uv_mutex_unlock(&global_epoll_lock);
+        errno = ENOENT;
+        return -1;
+      }
+      lst->items[fd].fd = -1;
     }
-    lst->items[fd].fd = -1;
   } else if (op == EPOLL_CTL_ADD) {
 
     /* Resizing to 'fd + 1' would expand the list to contain at least
