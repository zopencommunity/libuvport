diff --git a/src/unix/core.c b/src/unix/core.c
index 965e7f77..1f71366d 100644
--- a/src/unix/core.c
+++ b/src/unix/core.c
@@ -1575,9 +1575,11 @@ int uv_thread_getpriority(uv_thread_t tid, int* priority) {
   if (priority == NULL)
     return UV_EINVAL;
 
+#ifndef __MVS__
   r = pthread_getschedparam(tid, &policy, &param);
   if (r != 0)
     return UV__ERR(errno);
+#endif
 
 #ifdef __linux__
   if (SCHED_OTHER == policy && pthread_equal(tid, pthread_self())) {
@@ -1627,9 +1629,11 @@ int uv_thread_setpriority(uv_thread_t tid, int priority) {
   if (priority < UV_THREAD_PRIORITY_LOWEST || priority > UV_THREAD_PRIORITY_HIGHEST)
     return UV_EINVAL;
 
+#ifndef __MVS__
   r = pthread_getschedparam(tid, &policy, &param);
   if (r != 0)
     return UV__ERR(errno);
+#endif
 
 #ifdef __linux__
 /**
@@ -1640,7 +1644,7 @@ int uv_thread_setpriority(uv_thread_t tid, int priority) {
     return set_nice_for_calling_thread(priority);
 #endif
 
-#ifdef __PASE__
+#if defined(__PASE__) || defined(__MVS__)
   min = 1;
   max = 127;
 #else
@@ -1675,9 +1679,11 @@ int uv_thread_setpriority(uv_thread_t tid, int priority) {
 
   if (param.sched_priority != prio) {
     param.sched_priority = prio;
+#ifndef __MVS__
     r = pthread_setschedparam(tid, policy, &param);
     if (r != 0)
       return UV__ERR(errno);  
+#endif
   }
 
   return 0;
