# bump: libuv-version /LIBUV_VERSION="(.*)"/ https://github.com/libuv/libuv.git|semver:*
LIBUV_VERSION="1.48.0"

export ZOPEN_STABLE_URL="https://github.com/libuv/libuv.git"
export ZOPEN_STABLE_TAG="v${LIBUV_VERSION}"
export ZOPEN_STABLE_DEPS="zoslib make cmake"
export ZOPEN_DEV_URL="https://github.com/libuv/libuv.git"
export ZOPEN_DEV_DEPS="zoslib make cmake"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_COMP="CLANG"

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build -DZOSLIB=\"\$ZOSLIB_HOME\" -DBUILD_TESTING=ON --install-prefix \"\$ZOPEN_INSTALL_DIR/\" ."

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS --config Release"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_CHECK="zopen_check"
export ZOPEN_CHECK_OPTS=""
export ZOPEN_CHECK_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

zopen_check()
{
  $ZOPEN_ROOT/build/uv_run_tests_a
}

zopen_check_results()
{
chk="$1/$2_check.log"

successes=$(grep -E "^ok " ${chk} | wc -l)
totalTests=$(grep -E "^not ok |^ok " ${chk} | wc -l)
failures="$((totalTests-successes))"

  cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:30
fi
}

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -luv"
fi
ZZ
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  MAJOR=$(grep "define UV_VERSION_MAJOR" include/uv/version.h | cut -f3 -d' ')
  MINOR=$(grep "define UV_VERSION_MINOR" include/uv/version.h | cut -f3 -d' ')
  PATCH=$(grep "define UV_VERSION_PATCH" include/uv/version.h | cut -f3 -d' ')
  echo "$MAJOR.$MINOR.$PATCH"
}
